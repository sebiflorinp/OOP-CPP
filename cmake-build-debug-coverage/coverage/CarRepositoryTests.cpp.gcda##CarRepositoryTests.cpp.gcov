        -:    0:Source:/home/sebifp/devStuff/repos/OOP-CPP/test/CarRepositoryTests.cpp
        -:    0:Graph:/home/sebifp/devStuff/repos/OOP-CPP/cmake-build-debug-coverage/CMakeFiles/cpplab.dir/test/CarRepositoryTests.cpp.gcno
        -:    0:Data:/home/sebifp/devStuff/repos/OOP-CPP/cmake-build-debug-coverage/CMakeFiles/cpplab.dir/test/CarRepositoryTests.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <cassert>
        -:    2:#include <iostream>
        -:    3:#include "CarRepositoryTests.h"
        -:    4:#include "../domain/Car.h"
        -:    5:#include "../repository/CarRepository.h"
        -:    6:
function _ZN18CarRepositoryTests13testAddNewCarEv called 1 returned 100% blocks executed 43%
        1:    7:void CarRepositoryTests::testAddNewCar() {
        -:    8:    // Arrange
        2:    9:    Car car1 = Car("RO123AA", "AAA", "AAA", "AAA");
        1:    9-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:    9-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:    9-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:    9-block  3
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:    9-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
    $$$$$:    9-block  5
    $$$$$:    9-block  6
    $$$$$:    9-block  7
    $$$$$:    9-block  8
    $$$$$:    9-block  9
    $$$$$:    9-block 10
    $$$$$:    9-block 11
    $$$$$:    9-block 12
        2:   10:    Car car2 = Car("RO123BB", "VVV", "VVV", "VVV");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   10-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   10-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   10-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   10-block  3
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
    $$$$$:   10-block  4
    $$$$$:   10-block  5
    $$$$$:   10-block  6
    $$$$$:   10-block  7
    $$$$$:   10-block  8
    $$$$$:   10-block  9
    $$$$$:   10-block 10
    $$$$$:   10-block 11
        2:   11:    Car car3 = Car("RO123AA", "BBB", "BBB", "BBB");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   11-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   11-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   11-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   11-block  3
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
    $$$$$:   11-block  4
    $$$$$:   11-block  5
    $$$$$:   11-block  6
    $$$$$:   11-block  7
    $$$$$:   11-block  8
    $$$$$:   11-block  9
    $$$$$:   11-block 10
    $$$$$:   11-block 11
        1:   12:    CarRepository cars = CarRepository();
call    0 returned 1
        1:   13:    cars.addNewCar(car1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   14:
        -:   15:    // Act
        -:   16:    try {
        1:   17:        cars.addNewCar(car3);
        1:   17-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
    #####:   18:        assert(true == false);
    %%%%%:   18-block  0
call    0 never executed
        1:   19:    } catch (...) {
        1:   19-block  0
        1:   19-block  1
call    0 returned 1
        -:   20:        assert(true == true);
        1:   21:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   22:
        -:   23:    try {
        1:   24:        cars.addNewCar(car2);
        1:   24-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    =====:   25:    } catch (...) {
    $$$$$:   25-block  0
    $$$$$:   25-block  1
call    0 never executed
    =====:   26:        assert(false == true);
call    0 never executed
        -:   27:    }
        -:   28:
        -:   29:    // Assert
        1:   30:    assert(car1.compareCars(cars.getCarByRegistrationNumber("RO123AA")));
        1:   30-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   30-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   30-block  2
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   30-block  3
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    $$$$$:   30-block  4
call   12 never executed
        1:   30-block  5
call   13 returned 1
call   14 returned 1
call   15 returned 1
    $$$$$:   30-block  6
call   16 never executed
    $$$$$:   30-block  7
    $$$$$:   30-block  8
call   17 never executed
    $$$$$:   30-block  9
    $$$$$:   30-block 10
call   18 never executed
    $$$$$:   30-block 11
        1:   31:    assert(car2.compareCars(cars.getCarByRegistrationNumber("RO123BB")));
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   31-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   31-block  1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   31-block  2
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    $$$$$:   31-block  3
call   12 never executed
        1:   31-block  4
call   13 returned 1
call   14 returned 1
call   15 returned 1
    $$$$$:   31-block  5
call   16 never executed
    $$$$$:   31-block  6
    $$$$$:   31-block  7
call   17 never executed
    $$$$$:   31-block  8
    $$$$$:   31-block  9
call   18 never executed
    $$$$$:   31-block 10
        1:   32:}
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
    $$$$$:   32-block  0
call    4 never executed
    $$$$$:   32-block  1
call    5 never executed
    $$$$$:   32-block  2
call    6 never executed
    $$$$$:   32-block  3
call    7 never executed
        -:   33:
function _ZN18CarRepositoryTests30testGetCarByRegistrationNumberEv called 1 returned 100% blocks executed 48%
        1:   34:void CarRepositoryTests::testGetCarByRegistrationNumber() {
        -:   35:    // Arrange
        2:   36:    Car car1 = Car("RO123AA", "AAA", "AAA", "AAA");
        1:   36-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   36-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   36-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   36-block  3
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   36-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
    $$$$$:   36-block  5
    $$$$$:   36-block  6
    $$$$$:   36-block  7
    $$$$$:   36-block  8
    $$$$$:   36-block  9
    $$$$$:   36-block 10
    $$$$$:   36-block 11
    $$$$$:   36-block 12
        2:   37:    Car car2 = Car("RO123BB", "VVV", "VVV", "VVV");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   37-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   37-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   37-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   37-block  3
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
    $$$$$:   37-block  4
    $$$$$:   37-block  5
    $$$$$:   37-block  6
    $$$$$:   37-block  7
    $$$$$:   37-block  8
    $$$$$:   37-block  9
    $$$$$:   37-block 10
    $$$$$:   37-block 11
        1:   38:    CarRepository cars = CarRepository();
call    0 returned 1
        1:   39:    cars.addNewCar(car1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   40:    cars.addNewCar(car2);
        1:   40-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   41:
        -:   42:    // Act
        2:   43:    const Car actual1 = cars.getCarByRegistrationNumber("RO123AA");
        1:   43-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   43-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 1
    $$$$$:   43-block  2
    $$$$$:   43-block  3
        2:   44:    const Car actual2 = cars.getCarByRegistrationNumber("RO123BB");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   44-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 1
    $$$$$:   44-block  1
    $$$$$:   44-block  2
        -:   45:    try {
       3*:   46:        const Car actual3 = cars.getCarByRegistrationNumber("RO134AA");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   46-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1 (throw)
call    7 never executed
        1:   46-block  1
        1:   46-block  2
    #####:   47:        assert(true == false);
call    0 never executed
        1:   48:    } catch (...) {
        1:   48-block  0
        1:   48-block  1
call    0 returned 1
        -:   49:        assert(true == true);
        1:   50:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   51:
        -:   52:    // Assert
        1:   53:    assert(car1.compareCars(actual1));
        1:   53-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   53-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   53-block  2
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    $$$$$:   53-block  3
call    8 never executed
        1:   53-block  4
call    9 returned 1
    $$$$$:   53-block  5
call   10 never executed
    $$$$$:   53-block  6
        1:   54:    assert(car2.compareCars(actual2));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   54-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   54-block  1
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    $$$$$:   54-block  2
call    8 never executed
        1:   54-block  3
call    9 returned 1
    $$$$$:   54-block  4
call   10 never executed
    $$$$$:   54-block  5
        1:   55:}
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
    $$$$$:   55-block  0
call    5 never executed
    $$$$$:   55-block  1
call    6 never executed
    $$$$$:   55-block  2
call    7 never executed
    $$$$$:   55-block  3
call    8 never executed
    $$$$$:   55-block  4
call    9 never executed
        -:   56:
function _ZN18CarRepositoryTests14testGetAllCarsEv called 1 returned 100% blocks executed 46%
        1:   57:void CarRepositoryTests::testGetAllCars() {
        -:   58:    // Arrange
        2:   59:    Car car1 = Car("RO123AA", "AAA", "AAA", "AAA");
        1:   59-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   59-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   59-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   59-block  3
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   59-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
    $$$$$:   59-block  5
    $$$$$:   59-block  6
    $$$$$:   59-block  7
    $$$$$:   59-block  8
    $$$$$:   59-block  9
    $$$$$:   59-block 10
    $$$$$:   59-block 11
    $$$$$:   59-block 12
        2:   60:    Car car2 = Car("RO123BB", "VVV", "VVV", "VVV");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   60-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   60-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   60-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   60-block  3
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
    $$$$$:   60-block  4
    $$$$$:   60-block  5
    $$$$$:   60-block  6
    $$$$$:   60-block  7
    $$$$$:   60-block  8
    $$$$$:   60-block  9
    $$$$$:   60-block 10
    $$$$$:   60-block 11
        1:   61:    CarRepository cars = CarRepository();
call    0 returned 1
        1:   62:    cars.addNewCar(car1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   63:    cars.addNewCar(car2);
        1:   63-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   64:
        -:   65:    // Act
        1:   66:    std::vector<Car> returnedCars = cars.getAllCars();
        1:   66-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   66-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        -:   67:
        -:   68:    // Assert
       1*:   69:    assert(car1.compareCars(returnedCars.at(0)));
        1:   69-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   69-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   69-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   69-block  3
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:   69-block  4
call   11 never executed
        1:   69-block  5
call   12 returned 1
    $$$$$:   69-block  6
call   13 never executed
    $$$$$:   69-block  7
       1*:   70:    assert(car2.compareCars(returnedCars.at(1)));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   70-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   70-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   70-block  2
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:   70-block  3
call   11 never executed
        1:   70-block  4
call   12 returned 1
    $$$$$:   70-block  5
call   13 never executed
    $$$$$:   70-block  6
        1:   71:}
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
    $$$$$:   71-block  0
call    4 never executed
    $$$$$:   71-block  1
call    5 never executed
    $$$$$:   71-block  2
call    6 never executed
    $$$$$:   71-block  3
call    7 never executed
        -:   72:
function _ZN18CarRepositoryTests33testDeleteCarByRegistrationNumberEv called 1 returned 100% blocks executed 51%
        1:   73:void CarRepositoryTests::testDeleteCarByRegistrationNumber() {
        -:   74:    // Arrange
        2:   75:    Car car1 = Car("RO123AA", "AAA", "AAA", "AAA");
        1:   75-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   75-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   75-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   75-block  3
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   75-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
    $$$$$:   75-block  5
    $$$$$:   75-block  6
    $$$$$:   75-block  7
    $$$$$:   75-block  8
    $$$$$:   75-block  9
    $$$$$:   75-block 10
    $$$$$:   75-block 11
    $$$$$:   75-block 12
        2:   76:    Car car2 = Car("RO123BB", "VVV", "VVV", "VVV");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   76-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   76-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   76-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   76-block  3
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
    $$$$$:   76-block  4
    $$$$$:   76-block  5
    $$$$$:   76-block  6
    $$$$$:   76-block  7
    $$$$$:   76-block  8
    $$$$$:   76-block  9
    $$$$$:   76-block 10
    $$$$$:   76-block 11
        1:   77:    CarRepository cars = CarRepository();
call    0 returned 1
        1:   78:    cars.addNewCar(car1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   79:    cars.addNewCar(car2);
        1:   79-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   80:
        -:   81:    // Act
        -:   82:    try {
       3*:   83:        cars.deleteCarByRegistrationNumber("RO123BN");
        1:   83-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   83-block  1
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1 (throw)
    %%%%%:   83-block  2
call    7 never executed
call    8 never executed
        1:   83-block  3
call    9 returned 1
        1:   83-block  4
        1:   83-block  5
call   10 returned 1
        1:   83-block  6
    #####:   84:        assert(true == false);
call    0 never executed
        1:   85:    } catch (...) {
        1:   85-block  0
        1:   85-block  1
call    0 returned 1
        -:   86:        assert(true == true);
        1:   87:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   88:    cars.deleteCarByRegistrationNumber("RO123AA");
        1:   88-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   88-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   88-block  2
call    7 returned 1
call    8 returned 1
    $$$$$:   88-block  3
call    9 never executed
    $$$$$:   88-block  4
    $$$$$:   88-block  5
call   10 never executed
    $$$$$:   88-block  6
        -:   89:
        -:   90:    // Assert
        -:   91:    try {
        3:   92:        cars.getCarByRegistrationNumber("RO123AA");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   92-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1 (throw)
    $$$$$:   92-block  1
call    7 never executed
call    8 never executed
call    9 never executed
        1:   92-block  2
call   10 returned 1
        1:   92-block  3
        1:   92-block  4
call   11 returned 1
        1:   92-block  5
    =====:   93:        assert(false == true);
call    0 never executed
        1:   94:    } catch (...) {
        1:   94-block  0
        1:   94-block  1
call    0 returned 1
        -:   95:        assert(true == true);
        1:   96:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   97:    assert(car2.compareCars(cars.getCarByRegistrationNumber("RO123BB")));
        1:   97-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   97-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   97-block  2
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   97-block  3
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    $$$$$:   97-block  4
call   12 never executed
        1:   97-block  5
call   13 returned 1
call   14 returned 1
call   15 returned 1
    $$$$$:   97-block  6
call   16 never executed
    $$$$$:   97-block  7
    $$$$$:   97-block  8
call   17 never executed
    $$$$$:   97-block  9
    $$$$$:   97-block 10
call   18 never executed
    $$$$$:   97-block 11
        1:   98:}
call    0 returned 1
call    1 returned 1
call    2 returned 1
    $$$$$:   98-block  0
call    3 never executed
    $$$$$:   98-block  1
call    4 never executed
    $$$$$:   98-block  2
call    5 never executed
        -:   99:
function _ZN18CarRepositoryTests33testUpdateCarByRegistrationNumberEv called 1 returned 100% blocks executed 51%
        1:  100:void CarRepositoryTests::testUpdateCarByRegistrationNumber() {
        -:  101:    // Arrange
        2:  102:    Car car1 = Car("RO123AA", "AAA", "AAA", "AAA");
        1:  102-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  102-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  102-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  102-block  3
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  102-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
    $$$$$:  102-block  5
    $$$$$:  102-block  6
    $$$$$:  102-block  7
    $$$$$:  102-block  8
    $$$$$:  102-block  9
    $$$$$:  102-block 10
    $$$$$:  102-block 11
    $$$$$:  102-block 12
        2:  103:    Car car2 = Car("RO123BB", "VVV", "VVV", "VVV");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  103-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  103-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  103-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  103-block  3
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
    $$$$$:  103-block  4
    $$$$$:  103-block  5
    $$$$$:  103-block  6
    $$$$$:  103-block  7
    $$$$$:  103-block  8
    $$$$$:  103-block  9
    $$$$$:  103-block 10
    $$$$$:  103-block 11
        2:  104:    Car newCar1= Car("EN123AA", "BBB", "BBB", "BBB");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  104-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  104-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  104-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  104-block  3
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
    $$$$$:  104-block  4
    $$$$$:  104-block  5
    $$$$$:  104-block  6
    $$$$$:  104-block  7
    $$$$$:  104-block  8
    $$$$$:  104-block  9
    $$$$$:  104-block 10
    $$$$$:  104-block 11
        1:  105:    CarRepository cars = CarRepository();
call    0 returned 1
        1:  106:    cars.addNewCar(car1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  107:    cars.addNewCar(car2);
        1:  107-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  108:
        -:  109:    // Act
        -:  110:    try {
       4*:  111:        cars.updateCarByRegistrationNumber("RO123MM", newCar1);
        1:  111-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  111-block  1
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  111-block  2
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1 (throw)
    %%%%%:  111-block  3
call   10 never executed
call   11 never executed
call   12 never executed
        1:  111-block  4
call   13 returned 1
        1:  111-block  5
        1:  111-block  6
call   14 returned 1
        1:  111-block  7
        1:  111-block  8
call   15 returned 1
        1:  111-block  9
    #####:  112:        assert(true == false);
call    0 never executed
        1:  113:    } catch (...) {
        1:  113-block  0
        1:  113-block  1
call    0 returned 1
        -:  114:        assert(true == true)
        -:  115:;
        1:  116:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  117:
        -:  118:    try {
        3:  119:        cars.updateCarByRegistrationNumber(car1.getRegistrationNumber(), car2);
        1:  119-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  119-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  119-block  2
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1 (throw)
    $$$$$:  119-block  3
call    9 never executed
call   10 never executed
        1:  119-block  4
call   11 returned 1
        1:  119-block  5
        1:  119-block  6
call   12 returned 1
        1:  119-block  7
    =====:  120:        assert(true == false);
call    0 never executed
        1:  121:    } catch (...) {
        1:  121-block  0
        1:  121-block  1
call    0 returned 1
        -:  122:        assert(true == true);
        1:  123:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  124:
        1:  125:    cars.updateCarByRegistrationNumber("RO123AA", newCar1);
        1:  125-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  125-block  1
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  125-block  2
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:  125-block  3
call   10 returned 1
call   11 returned 1
call   12 returned 1
    $$$$$:  125-block  4
call   13 never executed
    $$$$$:  125-block  5
    $$$$$:  125-block  6
call   14 never executed
    $$$$$:  125-block  7
    $$$$$:  125-block  8
call   15 never executed
    $$$$$:  125-block  9
        -:  126:
        -:  127:    // Assert
        -:  128:    try {
        3:  129:        cars.getCarByRegistrationNumber("RO123AA");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  129-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1 (throw)
    $$$$$:  129-block  1
call    7 never executed
call    8 never executed
call    9 never executed
        1:  129-block  2
call   10 returned 1
        1:  129-block  3
        1:  129-block  4
call   11 returned 1
        1:  129-block  5
    =====:  130:        assert(false == true);
call    0 never executed
        1:  131:    } catch (...) {
        1:  131-block  0
        1:  131-block  1
call    0 returned 1
        -:  132:        assert(true == true);
        1:  133:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  134:
        1:  135:    assert(newCar1.compareCars(cars.getCarByRegistrationNumber("EN123AA")));
        1:  135-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  135-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  135-block  2
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:  135-block  3
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    $$$$$:  135-block  4
call   12 never executed
        1:  135-block  5
call   13 returned 1
call   14 returned 1
call   15 returned 1
    $$$$$:  135-block  6
call   16 never executed
    $$$$$:  135-block  7
    $$$$$:  135-block  8
call   17 never executed
    $$$$$:  135-block  9
    $$$$$:  135-block 10
call   18 never executed
    $$$$$:  135-block 11
        -:  136:
        1:  137:}
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
    $$$$$:  137-block  0
call    4 never executed
    $$$$$:  137-block  1
call    5 never executed
    $$$$$:  137-block  2
call    6 never executed
    $$$$$:  137-block  3
call    7 never executed
