        -:    0:Source:/home/sebifp/ubb/cpplab/ui/UI.cpp
        -:    0:Graph:/home/sebifp/ubb/cpplab/cmake-build-debug-coverage/CMakeFiles/cpplab.dir/ui/UI.cpp.gcno
        -:    0:Data:/home/sebifp/ubb/cpplab/cmake-build-debug-coverage/CMakeFiles/cpplab.dir/ui/UI.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <iostream>
        -:    2:#include "UI.h"
        -:    3:#include "../misc/Filters.h"
        -:    4:#include "../misc/SortingFunctions.h"
        -:    5:#include "../misc/Exceptions.h"
        -:    6:
        -:    7:using std::string;
        -:    8:using std::cout;
        -:    9:using std::cin;
        -:   10:using std::endl;
        -:   11:
function _ZN2UIC2ERK13CarController called 1 returned 100% blocks executed 80%
        1:   12:UI::UI(const CarController& carController) : carController(carController) {
        1:   12-block  0
call    0 returned 1
        1:   13:    this->carController = carController;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   14:}
        1:   14-block  0
    $$$$$:   14-block  1
call    0 never executed
        -:   15:
        -:   16:
        -:   17:
function _ZN2UI6runAppEv called 1 returned 100% blocks executed 7%
        1:   18:void UI::runApp() {
        1:   19:    bool running = true;
        1:   20:    cout << "This is a car management application." << std::endl;
        1:   20-block  0
call    0 returned 1
call    1 returned 1
        1:   21:    cout << "In order to use it you have to choose one of the following options:\n";
call    0 returned 1
        2:   22:    while (running) {
        2:   22-block  0
branch  0 taken 1
branch  1 taken 1 (fallthrough)
        1:   23:        int option = 6;
        -:   24:        cout << "  1. Add a new car. \n"
        -:   25:                "  2. Delete a car. \n"
        -:   26:                "  3. Update a car. \n"
        -:   27:                "  4. Display all the cars.\n"
        -:   28:                "  5. Find a car by registration number.\n"
        -:   29:                "  6. Filter cars by producer.\n"
        -:   30:                "  7. Filter cars by type.\n"
        -:   31:                "  8. Sort cars by registration number.\n"
        -:   32:                "  9. Sort cars by type.\n"
        -:   33:                "  10. Sort cars by producer and model.\n"
        1:   34:                "  11. Exit the application.\n";
        1:   34-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   35:        try {
        1:   36:            cin >> option;
        1:   36-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    =====:   37:        } catch (...) {
    $$$$$:   37-block  0
    $$$$$:   37-block  1
call    0 never executed
    =====:   38:            cout << "The option is not an integer. Please input an integer." << std::endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:   38-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    =====:   39:            continue;
    $$$$$:   39-block  0
    =====:   40:        }
    $$$$$:   40-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:   40-block  1
call    3 never executed
        -:   41:        // variables required for adding a new car
        1:   42:        string newRegistrationNumber;
        1:   42-block  0
call    0 returned 1
        1:   43:        string registrationNumber;
call    0 returned 1
        1:   44:        string type;
call    0 returned 1
        1:   45:        string model;
call    0 returned 1
        1:   46:        string producer;
call    0 returned 1
        1:   47:        string producerToFilterBy;
call    0 returned 1
        -:   48:
        -:   49:
        1:   50:        switch (option) {
branch  0 taken 0
branch  1 taken 0
branch  2 taken 0
branch  3 taken 0
branch  4 taken 0
branch  5 taken 0
branch  6 taken 0
branch  7 taken 0
branch  8 taken 0
branch  9 taken 0
branch 10 taken 1
branch 11 taken 0
    #####:   51:            case 1:
        -:   52:                // get required fields from the user
    #####:   53:                cout << "Input the registration number of the car" << std::endl;
    %%%%%:   53-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   53-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:   54:                cin >> registrationNumber;
    %%%%%:   54-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   55:
    #####:   56:                cout << "Input the type of the car" << std::endl;
    %%%%%:   56-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   56-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:   57:                cin >> type;
    %%%%%:   57-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   58:
    #####:   59:                cout << "Input the model of the car" << std::endl;
    %%%%%:   59-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   59-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:   60:                cin >> model;
    %%%%%:   60-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   61:
    #####:   62:                cout << "Input the producer of the car" << std::endl;
    %%%%%:   62-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   62-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:   63:                cin >> producer;
    %%%%%:   63-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   64:
        -:   65:                // try to push_back the car
        -:   66:                try {
    #####:   67:                    this->carController.addNewCar(registrationNumber, type, model, producer);
    %%%%%:   67-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   68:                    cout << "The car was added successfully" << endl;
    %%%%%:   68-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   68-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    =====:   69:                } catch (InvalidDataError& error) {
    $$$$$:   69-block  0
branch  0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:   69-block  1
call    3 never executed
    =====:   70:                    cout << error.getErrorMessage();
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:   70-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    $$$$$:   70-block  1
call    6 never executed
    $$$$$:   70-block  2
call    7 never executed
    $$$$$:   70-block  3
    =====:   71:                } catch (DuplicateDataError& error) {
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:   71-block  0
call    3 never executed
    $$$$$:   71-block  1
call    4 never executed
    =====:   72:                    cout << error.getErrorMessage() << endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:   72-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    $$$$$:   72-block  1
call    6 never executed
branch  7 never executed
branch  8 never executed
    $$$$$:   72-block  2
call    9 never executed
    $$$$$:   72-block  3
call   10 never executed
    $$$$$:   72-block  4
    =====:   73:                }
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:   73-block  0
call    3 never executed
    #####:   74:                break;
    %%%%%:   74-block  0
    #####:   75:            case 2:
    #####:   76:                if (this->carController.getAllCars().size() == 0) {
    %%%%%:   76-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   76-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:   77:                    cout << "There are no cars to delete" << endl;
    %%%%%:   77-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   77-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:   78:                    break;
    %%%%%:   78-block  0
        -:   79:                }
    #####:   80:                this->displayCars(this->carController.getAllCars());
    %%%%%:   80-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   80-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:   81:                cout << "Input the registration number of the car that will be deleted:" << endl;
    %%%%%:   81-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   81-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:   82:                cin >> registrationNumber;
    %%%%%:   82-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   83:                try {
    #####:   84:                    this->carController.deleteCarByRegistrationNumber(registrationNumber);
    %%%%%:   84-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   85:                    cout << "The car was deleted successfully!" << endl;
    %%%%%:   85-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   85-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    =====:   86:                } catch (CarNotFoundError& error) {
    $$$$$:   86-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:   86-block  1
call    2 never executed
    =====:   87:                    cout << error.getErrorMessage() << endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:   87-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    $$$$$:   87-block  1
call    6 never executed
branch  7 never executed
branch  8 never executed
    $$$$$:   87-block  2
call    9 never executed
    $$$$$:   87-block  3
call   10 never executed
    $$$$$:   87-block  4
    =====:   88:                }
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:   88-block  0
call    3 never executed
    #####:   89:                break;
    %%%%%:   89-block  0
    #####:   90:            case 3:
    #####:   91:                if (this->carController.getAllCars().size() == 0) {
    %%%%%:   91-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   91-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:   92:                    cout << "There are no cars to update." <<endl;
    %%%%%:   92-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   92-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:   93:                    break;
    %%%%%:   93-block  0
        -:   94:                }
    #####:   95:                UI::displayCars(this->carController.getAllCars());
    %%%%%:   95-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   95-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:   96:
    #####:   97:                cout << "Input the registration number of the car that will be updated." << endl;
    %%%%%:   97-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   97-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:   98:                cin >> registrationNumber;
    %%%%%:   98-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   99:
    #####:  100:                cout << "Input the updated registration number." << endl;
    %%%%%:  100-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  100-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  101:                cin >> newRegistrationNumber;
    %%%%%:  101-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  102:
    #####:  103:                cout << "Input the updated type." << endl;
    %%%%%:  103-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  103-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  104:                cin >> type;
    %%%%%:  104-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  105:
    #####:  106:                cout << "Input the updated model." << endl;
    %%%%%:  106-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  106-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  107:                cin >> model;
    %%%%%:  107-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  108:
    #####:  109:                cout << "Input the updated producer." << endl;
    %%%%%:  109-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  109-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  110:                cin >> producer;
    %%%%%:  110-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  111:
        -:  112:                try {
    #####:  113:                    this->carController.updateCarByRegistrationNumber(registrationNumber, newRegistrationNumber, type,
    %%%%%:  113-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  114:                            model, producer);
    #####:  115:                    cout << "The car was updated successfully." << endl;
    %%%%%:  115-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  115-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    =====:  116:                } catch (InvalidDataError& error) {
    $$$$$:  116-block  0
branch  0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:  116-block  1
call    3 never executed
    =====:  117:                    cout << error.getErrorMessage();
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:  117-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    $$$$$:  117-block  1
call    6 never executed
    $$$$$:  117-block  2
call    7 never executed
    $$$$$:  117-block  3
    =====:  118:                } catch (DuplicateDataError& error) {
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:  118-block  0
call    3 never executed
    $$$$$:  118-block  1
call    4 never executed
    =====:  119:                    cout << error.getErrorMessage() << endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:  119-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    $$$$$:  119-block  1
call    6 never executed
branch  7 never executed
branch  8 never executed
    $$$$$:  119-block  2
call    9 never executed
    $$$$$:  119-block  3
call   10 never executed
    $$$$$:  119-block  4
    =====:  120:                }
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:  120-block  0
call    3 never executed
    #####:  121:                break;
    %%%%%:  121-block  0
    #####:  122:            case 4:
    #####:  123:                if (carController.getAllCars().empty()) {
    %%%%%:  123-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  123-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  124:                    cout << "There are no cars to display" << endl;
    %%%%%:  124-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  124-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  125:                } else {
    #####:  126:                    UI::displayCars(carController.getAllCars());
    %%%%%:  126-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  126-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  127:                }
    #####:  128:                break;
    %%%%%:  128-block  0
    #####:  129:            case 5:
    #####:  130:                if (this->carController.getAllCars().empty()) {
    %%%%%:  130-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  130-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  131:                    cout << "There are no cars." << endl;
    %%%%%:  131-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  131-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  132:                    break;
    %%%%%:  132-block  0
        -:  133:                }
    #####:  134:                cout << "Input the registration number of the car you are looking for." << endl;
    %%%%%:  134-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  134-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  135:                cin >> registrationNumber;
    %%%%%:  135-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  136:                try {
    #####:  137:                    Car foundCar = this->carController.findCarByRegistrationNumber(registrationNumber);
    %%%%%:  137-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  138:                    std::vector<Car> displayCar;
    %%%%%:  138-block  0
call    0 never executed
    #####:  139:                    displayCar.push_back(foundCar);
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  140:                    UI::displayCars(displayCar);
    %%%%%:  140-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  141:                } catch (CarNotFoundError& error) {
    %%%%%:  141-block  0
call    0 never executed
call    1 never executed
    $$$$$:  141-block  1
call    2 never executed
    $$$$$:  141-block  2
call    3 never executed
    $$$$$:  141-block  3
branch  4 never executed
branch  5 never executed
    $$$$$:  141-block  4
call    6 never executed
    =====:  142:                    cout << error.getErrorMessage() << endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:  142-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    $$$$$:  142-block  1
call    6 never executed
branch  7 never executed
branch  8 never executed
    $$$$$:  142-block  2
call    9 never executed
    $$$$$:  142-block  3
call   10 never executed
    $$$$$:  142-block  4
    =====:  143:                }
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:  143-block  0
call    3 never executed
    #####:  144:                break;
    %%%%%:  144-block  0
    #####:  145:            case 6:
    #####:  146:                if (this->carController.getAllCars().empty()) {
    %%%%%:  146-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  146-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  147:                    cout << "There are no cars to filter." << endl;
    %%%%%:  147-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  147-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  148:                    break;
    %%%%%:  148-block  0
        -:  149:                }
        -:  150:
    #####:  151:                cout << "Input the producer of the car." << endl;
    %%%%%:  151-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  151-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  152:                cin >> producer;
    %%%%%:  152-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  153:
        -:  154:                {
    #####:  155:                    std::vector<Car> filteredCars = carController.filter(producer, filterByProducer);
    %%%%%:  155-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  155-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    $$$$$:  155-block  2
    #####:  156:                    if (filteredCars.empty()) {
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  157:                        cout << "There are no cars with the input producer." << endl;
    %%%%%:  157-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  157-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  158:                    } else {
    #####:  159:                        displayCars(filteredCars);
    %%%%%:  159-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  160:                    }
    #####:  161:                }
    %%%%%:  161-block  0
call    0 never executed
    $$$$$:  161-block  1
call    1 never executed
    #####:  162:                break;
    #####:  163:            case 7:
    #####:  164:                if (this->carController.getAllCars().empty()) {
    %%%%%:  164-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  164-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  165:                    cout << "There are no cars to filter." << endl;
    %%%%%:  165-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  165-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  166:                    break;
    %%%%%:  166-block  0
        -:  167:                }
        -:  168:
    #####:  169:                cout << "Input the type of the car." << endl;
    %%%%%:  169-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  169-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  170:                cin >> type;
    %%%%%:  170-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  171:
        -:  172:                {
    #####:  173:                    std::vector<Car> filteredCars = carController.filter(type, filterByType);
    %%%%%:  173-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  173-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    $$$$$:  173-block  2
    #####:  174:                    if (filteredCars.empty()) {
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  175:                        cout << "There are no cars with the input type." << endl;
    %%%%%:  175-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  175-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  176:                    } else {
    #####:  177:                        displayCars(filteredCars);
    %%%%%:  177-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  178:                    }
    #####:  179:                }
    %%%%%:  179-block  0
call    0 never executed
    $$$$$:  179-block  1
call    1 never executed
    #####:  180:                break;
    #####:  181:            case 8:
    #####:  182:                if (this->carController.getAllCars().size() == 0) {
    %%%%%:  182-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  182-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  183:                    cout << "There are no cars to sort." << endl;
    %%%%%:  183-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  183-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  184:                    break;
    %%%%%:  184-block  0
        -:  185:                }
    #####:  186:                cout << "Input sorting order: ASC / DESC." <<endl;
    %%%%%:  186-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  186-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  187:                {
    #####:  188:                    string ordering;
    %%%%%:  188-block  0
call    0 never executed
    #####:  189:                    cin >> ordering;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  190:                    if (ordering != "ASC" && ordering != "DESC") {
    %%%%%:  190-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  190-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  190-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  190-block  3
branch  8 never executed
branch  9 never executed
    %%%%%:  190-block  4
    %%%%%:  190-block  5
    %%%%%:  190-block  6
branch 10 never executed
branch 11 never executed
    #####:  191:                        cout << "Invalid sorting order." << endl;
    %%%%%:  191-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  191-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  192:                        break;
    %%%%%:  192-block  0
        -:  193:                    }
    #####:  194:                    displayCars(carController.sort(carController.getAllCars(), ordering, sortCarsByRegistrationNumber));
    %%%%%:  194-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  194-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  194-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  194-block  3
call    9 never executed
    $$$$$:  194-block  4
call   10 never executed
    $$$$$:  194-block  5
    #####:  195:                }
    %%%%%:  195-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:  195-block  1
call    3 never executed
    #####:  196:                break;
    %%%%%:  196-block  0
    #####:  197:            case 9:
    #####:  198:                if (this->carController.getAllCars().empty()) {
    %%%%%:  198-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  198-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  199:                    cout << "There are no cars to sort." << endl;
    %%%%%:  199-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  199-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  200:                    break;
    %%%%%:  200-block  0
        -:  201:                }
    #####:  202:                cout << "Input sorting order: ASC / DESC." <<endl;
    %%%%%:  202-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  202-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  203:                {
    #####:  204:                    string ordering;
    %%%%%:  204-block  0
call    0 never executed
    #####:  205:                    cin >> ordering;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  206:                    if (ordering != "ASC" && ordering != "DESC") {
    %%%%%:  206-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  206-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  206-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  206-block  3
branch  8 never executed
branch  9 never executed
    %%%%%:  206-block  4
    %%%%%:  206-block  5
    %%%%%:  206-block  6
branch 10 never executed
branch 11 never executed
    #####:  207:                        cout << "Invalid sorting order." << endl;
    %%%%%:  207-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  207-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  208:                        break;
    %%%%%:  208-block  0
        -:  209:                    }
    #####:  210:                    displayCars(carController.sort(carController.getAllCars(), ordering, sortCarsByType));
    %%%%%:  210-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  210-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  210-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  210-block  3
call    9 never executed
    $$$$$:  210-block  4
call   10 never executed
    $$$$$:  210-block  5
    #####:  211:                }
    %%%%%:  211-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:  211-block  1
call    3 never executed
    #####:  212:                break;
    %%%%%:  212-block  0
    #####:  213:            case 10:
    #####:  214:                if (this->carController.getAllCars().empty()) {
    %%%%%:  214-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  214-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  215:                    cout << "There are no cars to sort." << endl;
    %%%%%:  215-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  215-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  216:                    break;
    %%%%%:  216-block  0
        -:  217:                }
    #####:  218:                cout << "Input sorting order: ASC / DESC." <<endl;
    %%%%%:  218-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  218-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  219:                {
    #####:  220:                    string ordering;
    %%%%%:  220-block  0
call    0 never executed
    #####:  221:                    cin >> ordering;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  222:                    if (ordering != "ASC" && ordering != "DESC") {
    %%%%%:  222-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  222-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  222-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  222-block  3
branch  8 never executed
branch  9 never executed
    %%%%%:  222-block  4
    %%%%%:  222-block  5
    %%%%%:  222-block  6
branch 10 never executed
branch 11 never executed
    #####:  223:                        cout << "Invalid sorting order." << endl;
    %%%%%:  223-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  223-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  224:                        break;
    %%%%%:  224-block  0
        -:  225:                    }
    #####:  226:                    displayCars(carController.sort(carController.getAllCars(), ordering, sortCarsByProducerAndModel));
    %%%%%:  226-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  226-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  226-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  226-block  3
call    9 never executed
    $$$$$:  226-block  4
call   10 never executed
    $$$$$:  226-block  5
    #####:  227:                }
    %%%%%:  227-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:  227-block  1
call    3 never executed
    #####:  228:                break;
    %%%%%:  228-block  0
        1:  229:            case 11:
        1:  230:                running = false;
        1:  231:                cout << "Thank you for using this application." << endl;
        1:  231-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  231-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  232:                break;
        1:  232-block  0
    #####:  233:            default:
    #####:  234:                cout << "The input option is not valid." << endl;
    %%%%%:  234-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  234-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  235:                break;
    %%%%%:  235-block  0
        -:  236:        }
        -:  237:
        1:  238:    }
        1:  238-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
call    5 returned 1
    $$$$$:  238-block  1
call    6 never executed
    $$$$$:  238-block  2
call    7 never executed
    $$$$$:  238-block  3
call    8 never executed
    $$$$$:  238-block  4
call    9 never executed
    $$$$$:  238-block  5
call   10 never executed
    $$$$$:  238-block  6
call   11 never executed
        1:  239:}
        1:  239-block  0
        -:  240:
function _ZN2UI11displayCarsERKSt6vectorI3CarSaIS1_EE called 0 returned 0% blocks executed 0%
    #####:  241:void UI::displayCars(const std::vector<Car>& cars) {
    #####:  242:    printf("+------------------------+-------------------+-------------------+-------------------+\n");
    %%%%%:  242-block  0
call    0 never executed
    #####:  243:    printf("|  %-20s  |  %-15s  |  %-15s  |  %-15s  |\n", "Registration Number", "Type", "Model", "Producer");
call    0 never executed
    #####:  244:    printf("+------------------------+-------------------+-------------------+-------------------+\n");
call    0 never executed
        -:  245:
    #####:  246:    for (auto& car: cars) {
call    0 never executed
call    1 never executed
    %%%%%:  246-block  0
call    2 never executed
    %%%%%:  246-block  1
call    3 never executed
    %%%%%:  246-block  2
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  247:        printf("|  %-20s  |  %-15s  |  %-15s  |  %-15s  |\n", car.getRegistrationNumber().c_str(), car.getType().c_str(), car.getModel().c_str(), car.getProducer().c_str());
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  247-block  0
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  247-block  1
call    7 never executed
call    8 never executed
branch  9 never executed
branch 10 never executed
    %%%%%:  247-block  2
call   11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:  247-block  3
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:  247-block  4
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
    $$$$$:  247-block  5
call   23 never executed
    $$$$$:  247-block  6
    $$$$$:  247-block  7
call   24 never executed
    $$$$$:  247-block  8
    $$$$$:  247-block  9
call   25 never executed
    $$$$$:  247-block 10
    $$$$$:  247-block 11
call   26 never executed
    $$$$$:  247-block 12
    #####:  248:        printf("+------------------------+-------------------+-------------------+-------------------+\n");
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  249:    }
    #####:  250:    if (cars.size() == 0) {
    %%%%%:  250-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  251:        printf("|  %-20s  |  %-15s  |  %-15s  |  %-15s  |\n", " ", " ", " ", " ");
    %%%%%:  251-block  0
call    0 never executed
    #####:  252:        printf("+------------------------+-------------------+-------------------+-------------------+\n");
call    0 never executed
        -:  253:
        -:  254:    }
    #####:  255:}
    %%%%%:  255-block  0
