        -:    0:Source:/home/sebifp/devStuff/repos/OOP-CPP/misc/Filters.cpp
        -:    0:Graph:/home/sebifp/devStuff/repos/OOP-CPP/cmake-build-debug-coverage/CMakeFiles/cpplab.dir/misc/Filters.cpp.gcno
        -:    0:Data:/home/sebifp/devStuff/repos/OOP-CPP/cmake-build-debug-coverage/CMakeFiles/cpplab.dir/misc/Filters.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "Filters.h"
        -:    2:#include "algorithm"
        -:    3:
function _Z16filterByProducerRKSt6vectorI3CarSaIS0_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 2 returned 100% blocks executed 89%
        2:    4:std::vector<Car> filterByProducer(const std::vector<Car>& cars, const std::string& producer) {
        2:    5:    std::vector<Car> result;
        2:    5-block  0
call    0 returned 2
function _ZZ16filterByProducerRKSt6vectorI3CarSaIS0_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEENKUlRKS0_E_clESE_ called 6 returned 100% blocks executed 100%
        8:    6:    copy_if(cars.begin(), cars.end(), std::back_inserter(result), [&](const Car& car){return car.getProducer() == producer;});
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:    6-block  0
call    3 returned 2
call    4 returned 2
call    5 returned 2
branch  6 taken 2 (fallthrough)
branch  7 taken 0 (throw)
        6:    6-block  1
call    8 returned 6
call    9 returned 6
call   10 returned 6
        2:    7:    return result;
        2:    7-block  0
        2:    7-block  1
    =====:    8:}
    $$$$$:    8-block  0
call    0 never executed
        -:    9:
function _Z12filterByTypeRKSt6vectorI3CarSaIS0_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 89%
        1:   10:std::vector<Car> filterByType(const std::vector<Car>& cars, const std::string& type) {
        1:   11:    std::vector<Car> result;
        1:   11-block  0
call    0 returned 1
function _ZZ12filterByTypeRKSt6vectorI3CarSaIS0_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEENKUlRKS0_E_clESE_ called 4 returned 100% blocks executed 100%
        5:   12:    copy_if(cars.begin(), cars.end(), std::back_inserter(result), [&](const Car& car){return car.getType() == type;});
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   12-block  0
call    3 returned 1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        4:   12-block  1
call    8 returned 4
call    9 returned 4
call   10 returned 4
        1:   13:    return result;
        1:   13-block  0
        1:   13-block  1
    =====:   14:}
    $$$$$:   14-block  0
call    0 never executed
